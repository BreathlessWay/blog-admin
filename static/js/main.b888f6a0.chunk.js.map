{"version":3,"sources":["utils/storage.ts","utils/path.ts","utils/constant.ts","store/HomePageStore/homepage.enum.ts","components/common/FullLodaingComponent/index.tsx","components/common/ErrorBoundaryComponent/index.tsx","pages/App.tsx","serviceWorker.ts","utils/axios.conf.ts","utils/config.ts","index.tsx","route/index.ts","store/ArticleDetailStore/article.enum.ts","store/GlobalStore/index.ts","store/HomePageStore/index.ts","store/ImageStore/index.ts","store/UserStore/index.ts","store/TagStore/index.ts","store/ListStore/index.ts","store/ArticleListStore/index.ts","store/ArticleDetailStore/index.ts","store/CatStore/index.tsx","store/PhotoAlbumStore/index.ts","store/PhotoListStore/index.ts","store/index.ts"],"names":["storage","getKey","key","LOGIN_TOKEN","store","userStore","userId","set","value","_key","window","localStorage","setItem","JSON","stringify","get","item","getItem","parse","remove","removeItem","clear","getPath","_reverse","list","index","_item","Number","children","length","path","getBreadcrumbNameMap","maps","forEach","name","MAX_IMAGE_COUNT","UPLOAD_IMAGE_TYPE","UPLOAD_RESUME_TYPE","TIME_COUNT_DOWN","SKILL_PERCENT_MID","SKILL_COLOR","PAGE_LIMIT","TAG_COLOR","MAX_LENGTH_XS","MAX_LENGTH_SM","MAX_LENGTH_MD","MAX_LENGTH_LG","MAX_LENGTH_XXL","ARTICLE_CACHE_KEY","ARTICLE_CACHE_TIME","MAX_IMAGE_SIZE","MAX_RESUME_SIZE","MAX_SOCIAL_SIZE","ACTION_ICON_SIZE","SUPPORT_INTERSECTION_OBSERVER","IntersectionObserver","toLowerCase","IMAGE_DATA_SRC","EMenuType","FullLoadingComponent","className","size","error","ErrorBoundaryComponent","state","hasError","title","content","errorInfo","console","this","message","type","props","Component","RouterPage","lazy","LoginPage","App","fallback","locale","zhCN","exact","routeMapPath","login","component","Boolean","location","hostname","match","axios_config","method","baseURL","transformRequest","data","headers","qs","transformResponse","params","ID","timeout","withCredentials","responseType","xsrfCookieName","xsrfHeaderName","maxContentLength","validateStatus","status","maxRedirects","socketPath","axios","defaults","interceptors","request","use","config","Promise","reject","response","moment","configure","enforceActions","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","home","me","article","tag","create","edit","cat","photography","baseRoute","show","objectId","user","read","contacts","camera","articleRoute","photographyRoute","EArticleRenderType","EArticleStatus","EArticleDetailKey","EArticleEditError","GlobalStore","action","bound","loading","observable","HomePageStore","menuList","keys","openKeys","selectedKeys","pathname","menu","menuIndex","child","childIndex","dragIndex","hoverIndex","dragItem","splice","_firstMenu","find","computed","ImageStore","imageList","filter","image","push","UserStore","emptySocialTmp","icon","token","session","userDetail","social","fileUrl","trim","personalSkill","percent","color","resumeAlias","resumeUrl","resumeName","resumeImageUrl","en","zh","intro","personalTitle","personalInfo","personalIntro","rewardEnable","rewardTitle","zfbCode","wxCode","TagStore","setTags","tags","count","tagLength","i","currentTag","j","_compareTag","ListStore","pageIndex","hasNext","page","pageSize","results","map","_","concat","errMsg","currentCount","listLength","ArticleListStore","setList","query","articleIds","includes","keyword","undefined","startTime","endTime","ArticleDetailStore","emptyDetail","richTextHtml","richTextRaw","markdown","draftDetail","BraftEditor","createEditorState","renderType","richText","detail","createArticle","titleError","introError","tagError","contentError","CatStore","catFigure","setImageList","PhotoAlbumStore","PhotoListStore","column","spliceList","Array","url","globalStore","homepageStore","tagStore","articleListStore","articleDetailStore","catStore","photoAlbumStore","photoListStore"],"mappings":"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","file":"static/js/main.b888f6a0.chunk.js","sourcesContent":["import store from '@/store';\nimport { LOGIN_TOKEN } from '@/utils/constant';\n\nexport const storage = {\n\tgetKey(key: string) {\n\t\tif (key !== LOGIN_TOKEN) {\n\t\t\tkey = `${store.userStore.userId}_${key}`;\n\t\t}\n\t\treturn key;\n\t},\n\tset({ key, value }: { key: string; value: any }) {\n\t\tconst _key = storage.getKey(key);\n\t\twindow.localStorage.setItem(_key, JSON.stringify(value));\n\t},\n\tget(key: string) {\n\t\tconst _key = storage.getKey(key);\n\t\tconst item = window.localStorage.getItem(_key);\n\t\treturn item ? JSON.parse(item) : null;\n\t},\n\tremove(key: string) {\n\t\tconst _key = storage.getKey(key);\n\t\twindow.localStorage.removeItem(_key);\n\t},\n\tclear() {\n\t\twindow.localStorage.clear();\n\t},\n};\n","import { MenuListType } from '@/types/hompage';\n\nexport const getPath = (\n\t_reverse: Array<string>,\n\tlist: MenuListType,\n\tindex: number,\n): string => {\n\tconst key = _reverse[index];\n\tconst _item = list[Number(key)];\n\n\tif (_item.children && _item.children.length) {\n\t\treturn getPath(_reverse, _item.children as MenuListType, index + 1);\n\t} else {\n\t\treturn _item.path;\n\t}\n};\n\nexport const getBreadcrumbNameMap = (\n\tlist: MenuListType,\n\tmaps: Record<string, string>,\n) => {\n\tlist.forEach(item => {\n\t\tmaps[item.path] = item.name;\n\t\tif (item.children && item.children.length) {\n\t\t\tgetBreadcrumbNameMap(item.children as MenuListType, maps);\n\t\t}\n\t});\n};\n","// 登陆后本地的token键\nexport const LOGIN_TOKEN = 'login_token';\n\n// 最大上传图片数量\nexport const MAX_IMAGE_COUNT = 5;\n\n// 默认上传图片类型\nexport const UPLOAD_IMAGE_TYPE = '.ico,.png,.jpg,.jpeg';\n\n// 默认上传简历类型\nexport const UPLOAD_RESUME_TYPE = '.doc,.docx,.page,.jpeg,.png,.pdf';\n\n// 倒计时\nexport const TIME_COUNT_DOWN = 60;\n\n// 技能中间值\nexport const SKILL_PERCENT_MID = 50;\n\n// 技能默认色\nexport const SKILL_COLOR = '#333';\n\n// 默认每页数量\nexport const PAGE_LIMIT = 10;\n\n// tag颜色\nexport const TAG_COLOR = [\n\t'magenta',\n\t'red',\n\t'volcano',\n\t'orange',\n\t'gold',\n\t'lime',\n\t'green',\n\t'cyan',\n\t'blue',\n\t'geekblue',\n\t'purple',\n];\n\n// 文本输入字数限制\nexport const MAX_LENGTH_XS = 4;\n\nexport const MAX_LENGTH_SM = 10;\n\nexport const MAX_LENGTH_MD = 20;\n\nexport const MAX_LENGTH_LG = 100;\n\nexport const MAX_LENGTH_XL = 200;\n\nexport const MAX_LENGTH_XXL = 400;\n\n// 文章草稿键值\nexport const ARTICLE_CACHE_KEY = 'article_cache_key';\n\n// 文章自动保存定时时间\nexport const ARTICLE_CACHE_TIME = 3000;\n\n// 文章详情图片大小\nexport const ARTICLE_IMAGE_SIZE = 100;\n\n// 图片大小\nexport const MAX_IMAGE_SIZE = 500;\n\n// 简历文件大小\nexport const MAX_RESUME_SIZE = 2048;\n\n// 社交icon大小\nexport const MAX_SOCIAL_SIZE = 20;\n\n// icon的font-size\nexport const ACTION_ICON_SIZE = 24;\n\n// 是否支持IntersectionObserver\nexport const SUPPORT_INTERSECTION_OBSERVER =\n\t(typeof window.IntersectionObserver).toLowerCase() !== 'function';\n\n// 图片src存储key\nexport const IMAGE_DATA_SRC = 'data-src';\n","export enum EMenuType {\n\thome = 'home',\n\tuser = 'user',\n\tread = 'read',\n\tcontacts = 'contacts',\n\tcamera = 'camera',\n}\n","import React from \"react\";\n\nimport { Spin } from \"antd\";\n\nimport \"./style.scss\";\n\nconst FullLoadingComponent = () => {\n  return (\n    <aside className=\"full-loading\">\n      <Spin size=\"large\" />\n    </aside>\n  );\n};\n\nexport default FullLoadingComponent;\n","import React, { Component, ErrorInfo, GetDerivedStateFromError } from 'react';\n\nimport { Alert, Modal } from 'antd';\n\nimport { SUPPORT_INTERSECTION_OBSERVER } from '@/utils/constant';\n\nconst { error } = Modal;\n\nexport type ErrorBoundaryComponentPropType = {};\n\nexport type ErrorBoundaryComponentStateType = {\n\thasError: boolean;\n};\n\nexport default class ErrorBoundaryComponent extends Component<\n\tErrorBoundaryComponentPropType,\n\tErrorBoundaryComponentStateType\n> {\n\tstate = { hasError: false };\n\n\tstatic getDerivedStateFromError(\n\t\terror: GetDerivedStateFromError<\n\t\t\tErrorBoundaryComponentPropType,\n\t\t\tErrorBoundaryComponentStateType\n\t\t>,\n\t) {\n\t\t// 更新 state 使下一次渲染能够显示降级后的 UI\n\t\treturn { hasError: true };\n\t}\n\n\tcomponentDidMount(): void {\n\t\tif (SUPPORT_INTERSECTION_OBSERVER) {\n\t\t\terror({\n\t\t\t\ttitle: '警告',\n\t\t\t\tcontent:\n\t\t\t\t\t'您的浏览器不支持IntersectionObserver方法，会导致网址无法正常运行,请更换浏览器！',\n\t\t\t});\n\t\t}\n\t}\n\n\tcomponentDidCatch(error: Error, errorInfo: ErrorInfo) {\n\t\t// 你同样可以将错误日志上报给服务器\n\t\tconsole.error({ error, errorInfo });\n\t}\n\n\trender() {\n\t\tif (this.state.hasError) {\n\t\t\t// 你可以自定义降级后的 UI 并渲染\n\t\t\treturn <Alert message=\"系统发生异常，请联系管理人员\" type=\"error\" />;\n\t\t}\n\t\treturn this.props.children;\n\t}\n}\n","import React, { lazy, Suspense } from 'react';\n\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { Provider } from 'mobx-react';\n\nimport { ConfigProvider } from 'antd';\nimport FullLoadingComponent from '@/components/common/FullLodaingComponent';\nimport ErrorBoundaryComponent from '@/components/common/ErrorBoundaryComponent';\n\nimport zhCN from 'antd/es/locale/zh_CN';\n\nimport { routeMapPath } from '@/route';\n\nimport store from '@/store';\n\nconst RouterPage = lazy(() =>\n\timport(/* webpackChunkName: \"RouterPage\" */ './RouterPage'),\n);\nconst LoginPage = lazy(() =>\n\timport(/* webpackChunkName: \"LoginPage\" */ './LoginPage'),\n);\n\nconst App: React.FC = () => {\n\treturn (\n\t\t<ErrorBoundaryComponent>\n\t\t\t<Suspense fallback={<FullLoadingComponent />}>\n\t\t\t\t<ConfigProvider locale={zhCN}>\n\t\t\t\t\t<Provider {...store}>\n\t\t\t\t\t\t<BrowserRouter>\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\texact={true}\n\t\t\t\t\t\t\t\t\tpath={routeMapPath.login}\n\t\t\t\t\t\t\t\t\tcomponent={LoginPage}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Route component={RouterPage} />\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</BrowserRouter>\n\t\t\t\t\t</Provider>\n\t\t\t\t</ConfigProvider>\n\t\t\t</Suspense>\n\t\t</ErrorBoundaryComponent>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import axios, { AxiosRequestConfig } from 'axios';\n\nimport qs from 'qs';\n\nimport { baseURL } from './config';\n\nconst axios_config: AxiosRequestConfig = {\n\t// `url` 是用于请求的服务器 URL\n\t// url: '/user',\n\n\t// `method` 是创建请求时使用的方法\n\tmethod: 'get', // default\n\n\t// `baseURL` 将自动加在 `url` 前面，除非 `url` 是一个绝对 URL。\n\t// 它可以通过设置一个 `baseURL` 便于为 axios 实例的方法传递相对 URL\n\tbaseURL,\n\n\t// `transformRequest` 允许在向服务器发送前，修改请求数据\n\t// 只能用在 'PUT', 'POST' 和 'PATCH' 这几个请求方法\n\t// 后面数组中的函数必须返回一个字符串，或 ArrayBuffer，或 Stream\n\ttransformRequest: [\n\t\tfunction(data: any, headers?: any) {\n\t\t\t// 对 data 进行任意转换处理\n\t\t\treturn qs.stringify(data);\n\t\t},\n\t],\n\n\t// `transformResponse` 在传递给 then/catch 前，允许修改响应数据\n\ttransformResponse: [\n\t\tfunction(data: any) {\n\t\t\t// 对 data 进行任意转换处理\n\t\t\treturn data;\n\t\t},\n\t],\n\n\t// `headers` 是即将被发送的自定义请求头\n\theaders: { 'X-Requested-With': 'XMLHttpRequest' },\n\n\t// `params` 是即将与请求一起发送的 URL 参数\n\t// 必须是一个无格式对象(plain object)或 URLSearchParams 对象\n\tparams: {\n\t\tID: 12345,\n\t},\n\n\t// `paramsSerializer` 是一个负责 `params` 序列化的函数\n\t// (e.g. https://www.npmjs.com/package/qs, http://api.jquery.com/jquery.param/)\n\t// paramsSerializer: function(params) {\n\t//   return Qs.stringify(params, {arrayFormat: 'brackets'})\n\t// },\n\n\t// `data` 是作为请求主体被发送的数据\n\t// 只适用于这些请求方法 'PUT', 'POST', 和 'PATCH'\n\t// 在没有设置 `transformRequest` 时，必须是以下类型之一：\n\t// - string, plain object, ArrayBuffer, ArrayBufferView, URLSearchParams\n\t// - 浏览器专属：FormData, File, Blob\n\t// - Node 专属： Stream\n\t// data: {\n\t//   firstName: 'Fred'\n\t// },\n\n\t// `timeout` 指定请求超时的毫秒数(0 表示无超时时间)\n\t// 如果请求话费了超过 `timeout` 的时间，请求将被中断\n\ttimeout: 1000,\n\n\t// `withCredentials` 表示跨域请求时是否需要使用凭证\n\twithCredentials: false, // default\n\n\t// `adapter` 允许自定义处理请求，以使测试更轻松\n\t// 返回一个 promise 并应用一个有效的响应 (查阅 [response docs](#response-api)).\n\t// adapter: function(config: AxiosRequestConfig) {\n\t// \t/* ... */\n\t// },\n\n\t// `auth` 表示应该使用 HTTP 基础验证，并提供凭据\n\t// 这将设置一个 `Authorization` 头，覆写掉现有的任意使用 `headers` 设置的自定义 `Authorization`头\n\t// auth: {\n\t//   username: 'janedoe',\n\t//   password: 's00pers3cret'\n\t// },\n\n\t// `responseType` 表示服务器响应的数据类型，可以是 'arraybuffer', 'blob', 'document', 'json', 'text', 'stream'\n\tresponseType: 'json', // default\n\n\t// `responseEncoding` indicates encoding to use for decoding responses\n\t// Note: Ignored for `responseType` of 'stream' or client-side requests\n\t// responseEncoding: 'utf8', // default\n\n\t// `xsrfCookieName` 是用作 xsrf token 的值的cookie的名称\n\txsrfCookieName: 'XSRF-TOKEN', // default\n\n\t// `xsrfHeaderName` is the name of the http header that carries the xsrf token value\n\txsrfHeaderName: 'X-XSRF-TOKEN', // default\n\n\t// `onUploadProgress` 允许为上传处理进度事件\n\t// onUploadProgress: function (progressEvent:any) {\n\t//   // Do whatever you want with the native progress event\n\t// },\n\n\t// `onDownloadProgress` 允许为下载处理进度事件\n\t// onDownloadProgress: function (progressEvent:any) {\n\t//   // 对原生进度事件的处理\n\t// },\n\n\t// `maxContentLength` 定义允许的响应内容的最大尺寸\n\tmaxContentLength: 2000,\n\n\t// `validateStatus` 定义对于给定的HTTP 响应状态码是 resolve 或 reject  promise 。如果 `validateStatus` 返回 `true` (或者设置为 `null` 或 `undefined`)，promise 将被 resolve; 否则，promise 将被 rejecte\n\tvalidateStatus: function(status: number) {\n\t\treturn status >= 200 && status < 300; // default\n\t},\n\n\t// `maxRedirects` 定义在 node.js 中 follow 的最大重定向数目\n\t// 如果设置为0，将不会 follow 任何重定向\n\tmaxRedirects: 5, // default\n\n\t// `socketPath` defines a UNIX Socket to be used in node.js.\n\t// e.g. '/var/run/docker.sock' to send requests to the docker daemon.\n\t// Only either `socketPath` or `proxy` can be specified.\n\t// If both are specified, `socketPath` is used.\n\tsocketPath: null, // default\n\n\t// `httpAgent` 和 `httpsAgent` 分别在 node.js 中用于定义在执行 http 和 https 时使用的自定义代理。允许像这样配置选项：\n\t// `keepAlive` 默认没有启用\n\t// httpAgent: new http.Agent({ keepAlive: true }),\n\t// httpsAgent: new https.Agent({ keepAlive: true }),\n\n\t// 'proxy' 定义代理服务器的主机名称和端口\n\t// `auth` 表示 HTTP 基础验证应当用于连接代理，并提供凭据\n\t// 这将会设置一个 `Proxy-Authorization` 头，覆写掉已有的通过使用 `header` 设置的自定义 `Proxy-Authorization` 头。\n\t// proxy: {\n\t//   host: '127.0.0.1',\n\t//   port: 9000,\n\t//   auth: {\n\t//     username: 'mikeymike',\n\t//     password: 'rapunz3l'\n\t//   }\n\t// },\n\n\t// `cancelToken` 指定用于取消请求的 cancel token\n\t// （查看后面的 Cancellation 这节了解更多）\n\t// cancelToken: new axios.CancelToken(function (cancel:Canceler) {\n\t// })\n};\n\naxios.defaults = axios_config;\n\n// 添加请求拦截器\naxios.interceptors.request.use(\n\tfunction(config) {\n\t\t// 在发送请求之前做些什么\n\t\treturn config;\n\t},\n\tfunction(error) {\n\t\t// 对请求错误做些什么\n\t\treturn Promise.reject(error);\n\t},\n);\n\n// 添加响应拦截器\naxios.interceptors.response.use(\n\tfunction(response) {\n\t\t// 对响应数据做点什么\n\t\treturn response;\n\t},\n\tfunction(error) {\n\t\t// 对响应错误做点什么\n\t\treturn Promise.reject(error);\n\t},\n);\n","export const env = process.env.NODE_ENV;\n\nexport const baseURL = {\n\tdevelopment: 'development',\n\tproduction: 'production',\n\ttest: '',\n}[env];\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from '@/pages/App';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport moment from 'moment';\nimport 'moment/locale/zh-cn';\nimport { configure } from 'mobx';\nimport './utils/axios.conf';\n\nimport './style.scss';\n// 默认语言为 en-US，需要设置为中文\nmoment.locale('zh-cn');\n\n// 严格模式，所有observe的数据只能通过action修改\nconfigure({ enforceActions: 'observed' });\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { EMenuType } from '@/store/HomePageStore/homepage.enum';\n\nexport const routeMapPath = {\n\tlogin: '/login',\n\thome: '/home',\n\tme: '/me',\n\tarticle: {\n\t\tindex: '/article',\n\t\thome: '/article/index',\n\t\ttag: '/article/tag',\n\t\tcreate: '/article/create',\n\t\tedit: '/article/edit',\n\t},\n\tcat: '/cat',\n\tphotography: {\n\t\tindex: '/photography',\n\t\thome: '/photography/index',\n\t\tedit: '/photography/edit',\n\t},\n};\n\nexport const baseRoute = [\n\t{\n\t\tname: '首页',\n\t\ttype: EMenuType.home,\n\t\tpath: routeMapPath.home,\n\t\tshow: true,\n\t\tobjectId: 'home',\n\t},\n\t{\n\t\tname: '我',\n\t\ttype: EMenuType.user,\n\t\tpath: routeMapPath.me,\n\t\tshow: true,\n\t\tobjectId: 'me',\n\t},\n\t{\n\t\tname: '文章',\n\t\ttype: EMenuType.read,\n\t\tpath: routeMapPath.article.index,\n\t\tshow: true,\n\t\tobjectId: 'article',\n\t},\n\t{\n\t\tname: '撸猫',\n\t\ttype: EMenuType.contacts,\n\t\tpath: routeMapPath.cat,\n\t\tshow: true,\n\t\tobjectId: 'cat',\n\t},\n\t{\n\t\tname: '摄影',\n\t\ttype: EMenuType.camera,\n\t\tpath: routeMapPath.photography.index,\n\t\tshow: true,\n\t\tobjectId: 'camera',\n\t},\n];\n\nexport const articleRoute = [\n\t{ name: '文章管理', path: routeMapPath.article.home, show: true },\n\t{ name: '标签管理', path: routeMapPath.article.tag, show: true },\n\t{ name: '新建文章', path: routeMapPath.article.create, show: false },\n\t{ name: '编辑文章', path: routeMapPath.article.edit, show: false },\n];\n\nexport const photographyRoute = [\n\t{ name: '相册管理', path: routeMapPath.photography.home, show: true },\n\t{ name: '相片管理', path: routeMapPath.photography.edit, show: false },\n];\n","export enum EArticleRenderType {\n\trichText = 'richText',\n\tmarkdown = 'markdown',\n}\n\nexport enum EArticleStatus {\n\thide = 0,\n\tshow = 1,\n}\n\nexport enum EArticleDetailKey {\n\ttitle = 'title',\n\tintro = 'intro',\n\trichTextHtml = 'richTextHtml',\n\trichTextRaw = 'richTextRaw',\n\tmarkdown = 'markdown',\n\tstatus = 'status',\n\ttags = 'tags',\n\trenderType = 'renderType',\n\tdraftDetail = 'draftDetail',\n}\n\nexport enum EArticleEditError {\n\ttitleError = 'titleError',\n\tintroError = 'introError',\n\ttagError = 'tagError',\n\tcontentError = 'contentError',\n}\n","import { action, observable } from 'mobx';\n\nexport default class GlobalStore {\n\t@observable\n\tloading = false;\n\n\t@action.bound\n\tstartLoading() {\n\t\tthis.loading = true;\n\t}\n\n\t@action.bound\n\tendLoading() {\n\t\tthis.loading = false;\n\t}\n}\n","import { action, computed, observable } from 'mobx';\n\nimport { MenuItemType, MenuListType } from '@/types/hompage';\n\nimport { EMenuType } from '@/store/HomePageStore/homepage.enum';\n\nimport { articleRoute, photographyRoute, routeMapPath } from '@/route';\n\nimport { getBreadcrumbNameMap } from '@/utils/path';\n\nexport default class HomePageStore {\n\t@observable\n\tmenuList: MenuListType = [];\n\n\t@observable\n\topenKeys: Array<string> = [];\n\n\t@observable\n\tselectedKeys: Array<string> = [];\n\n\t@action.bound\n\tsetMenuList(list: MenuListType) {\n\t\tthis.menuList = list;\n\t\tthis.menuList.forEach(item => {\n\t\t\tif (item.type === EMenuType.read) {\n\t\t\t\titem.children = articleRoute;\n\t\t\t}\n\t\t\tif (item.type === EMenuType.camera) {\n\t\t\t\titem.children = photographyRoute;\n\t\t\t}\n\t\t});\n\t}\n\n\t@action.bound\n\tchangeOpenKeys(keys: Array<string>) {\n\t\tthis.openKeys = keys;\n\t}\n\n\t@action.bound\n\tchangeSelectedKeys(keys: Array<string>) {\n\t\tthis.selectedKeys = keys;\n\t}\n\n\t@action.bound\n\tsetKeys(pathname: string) {\n\t\tthis.menuList.forEach((menu, menuIndex) => {\n\t\t\tif (menu.children) {\n\t\t\t\tmenu.children.forEach((child, childIndex) => {\n\t\t\t\t\tif (child.path === pathname) {\n\t\t\t\t\t\tthis.openKeys = [`${menuIndex}`];\n\t\t\t\t\t\tthis.selectedKeys = child.show\n\t\t\t\t\t\t\t? [`${menuIndex}-${childIndex}`]\n\t\t\t\t\t\t\t: [`${menuIndex}-${0}`];\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (menu.path === pathname) {\n\t\t\t\tthis.selectedKeys = [`${menuIndex}`];\n\t\t\t\tthis.openKeys = [];\n\t\t\t}\n\t\t});\n\t}\n\n\t@action.bound\n\tchangeMenu({\n\t\titem,\n\t\tvalue,\n\t\ttype = 'input',\n\t}: {\n\t\titem: MenuItemType;\n\t\tvalue: any;\n\t\ttype?: 'input' | 'checkbox';\n\t}) {\n\t\tthis.menuList.forEach(menu => {\n\t\t\tif (menu.type === item.type) {\n\t\t\t\tif (type === 'input') {\n\t\t\t\t\tmenu.name = value;\n\t\t\t\t}\n\t\t\t\tif (type === 'checkbox') {\n\t\t\t\t\tmenu.show = value;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\t@action.bound\n\tsortMenuList(dragIndex: number, hoverIndex: number) {\n\t\tconst dragItem = this.menuList.splice(dragIndex, 1);\n\t\tthis.menuList.splice(hoverIndex, 0, ...dragItem);\n\t}\n\n\t@computed\n\tget breadcrumbNameMap() {\n\t\tconst maps: Record<string, string> = {};\n\t\tgetBreadcrumbNameMap(this.menuList, maps);\n\t\treturn maps;\n\t}\n\n\t@computed\n\tget firstMenu() {\n\t\tlet _firstMenu = {\n\t\t\tpath: routeMapPath.home,\n\t\t} as MenuItemType;\n\t\tif (this.menuList.length) {\n\t\t\t_firstMenu = this.menuList[0];\n\t\t\tif (_firstMenu.children && _firstMenu.children.length) {\n\t\t\t\t_firstMenu = _firstMenu.children[0] as MenuItemType;\n\t\t\t}\n\t\t\treturn _firstMenu;\n\t\t}\n\t\treturn _firstMenu;\n\t}\n\n\t@computed\n\tget catAlias() {\n\t\tconst item = this.menuList.find(menu => menu.type === EMenuType.contacts);\n\t\treturn item?.name ?? '';\n\t}\n\n\t@computed\n\tget cameraAlias() {\n\t\tconst item = this.menuList.find(menu => menu.type === EMenuType.camera);\n\t\treturn item?.name ?? '';\n\t}\n}\n","import { action, computed, observable } from 'mobx';\nimport { ImageItemType, ImageListType } from '@/types/image';\n\nexport default class ImageStore {\n\t@observable\n\timageList: ImageListType = [];\n\n\t@action.bound\n\tsetImageList(list: ImageListType) {\n\t\tif (list) {\n\t\t\tthis.imageList = list;\n\t\t}\n\t}\n\n\t@action.bound\n\tremoveImage(item: ImageItemType) {\n\t\tthis.imageList = this.imageList.filter(\n\t\t\timage => image.objectId !== item.objectId,\n\t\t);\n\t}\n\n\t@action.bound\n\taddImage(item: ImageItemType) {\n\t\tthis.imageList.push(item);\n\t}\n\n\t@action.bound\n\tsetShowImage(item: ImageItemType) {\n\t\tthis.imageList.forEach(image => {\n\t\t\timage.show = image.objectId === item.objectId;\n\t\t});\n\t}\n\n\t@computed\n\tget imageListLength() {\n\t\treturn this.imageList.length;\n\t}\n}\n","import { observable, action, computed } from 'mobx';\nimport { storage } from '@/utils/storage';\n\nimport ImageStore from '@/store/ImageStore';\n\nimport { UserDetailType } from '@/types/user';\n\nimport {\n\tEMottoChangeKey,\n\tEPersonalChangeKey,\n\tEResumeChangeKey,\n\tERewardChangeKey,\n} from '@/store/UserStore/user.enum';\n\nimport { LOGIN_TOKEN, SKILL_COLOR, SKILL_PERCENT_MID } from '@/utils/constant';\n\nexport default class UserStore {\n\t@observable\n\tsession = '';\n\n\t@observable\n\tpersonalFigure = new ImageStore();\n\n\t@observable\n\thobbiesFigure = new ImageStore();\n\n\t@observable\n\tuserDetail: UserDetailType = {\n\t\tresumeAlias: '',\n\t\tresumeUrl: '',\n\t\tresumeName: '',\n\t\tresumeImageUrl: '',\n\t\tsocial: [],\n\t\ten: '',\n\t\tzh: '',\n\t\tintro: '',\n\t\tpersonalTitle: '',\n\t\tpersonalInfo: '',\n\t\tpersonalIntro: '',\n\t\tpersonalSkill: [],\n\t\trewardEnable: false,\n\t\trewardTitle: '',\n\t\tzfbCode: '',\n\t\twxCode: '',\n\t};\n\n\temptySocialTmp = {\n\t\ticon: '',\n\t\tvalue: '',\n\t};\n\t// 登陆页面\n\t@action.bound\n\tlogin(token: string) {\n\t\tthis.session = token;\n\t\tstorage.set({ key: LOGIN_TOKEN, value: 'login' });\n\t}\n\n\t@action.bound\n\tlogout() {\n\t\tthis.session = '';\n\t\tstorage.remove(LOGIN_TOKEN);\n\t}\n\t// 首页\n\t@action.bound\n\taddSocial() {\n\t\tthis.userDetail.social.push(this.emptySocialTmp);\n\t}\n\n\t@action.bound\n\tdeleteSocial(index: number) {\n\t\tthis.userDetail.social.splice(index, 1);\n\t}\n\n\t@action.bound\n\tfilterSocial() {\n\t\tthis.userDetail.social = this.userDetail.social.filter(\n\t\t\titem => item.value || item.icon,\n\t\t);\n\t}\n\n\t@action.bound\n\tchangeSocialIcon({ fileUrl, index }: { fileUrl: string; index: number }) {\n\t\tthis.userDetail.social[index].icon = fileUrl;\n\t}\n\n\t@action.bound\n\tchangeSocialValue({ value, index }: { value: string; index: number }) {\n\t\tthis.userDetail.social[index].value = value.trim();\n\t}\n\n\t@action.bound\n\tsetPersonalInfo({\n\t\tkey,\n\t\tvalue,\n\t}: {\n\t\tkey:\n\t\t\t| EPersonalChangeKey\n\t\t\t| EMottoChangeKey\n\t\t\t| ERewardChangeKey\n\t\t\t| EResumeChangeKey;\n\t\tvalue: any;\n\t}) {\n\t\t(this.userDetail[key] as any) = value;\n\t}\n\n\t// 我页面\n\t@action.bound\n\tsortSkill(dragIndex: number, hoverIndex: number) {\n\t\tconst dragItem = this.userDetail.personalSkill.splice(dragIndex, 1);\n\t\tthis.userDetail.personalSkill.splice(hoverIndex, 0, ...dragItem);\n\t}\n\n\t@action.bound\n\tchangeSkillName(value: string, index: number) {\n\t\tthis.userDetail.personalSkill[index].name = value;\n\t}\n\n\t@action.bound\n\tchangeSkillPercent(value: number, index: number) {\n\t\tthis.userDetail.personalSkill[index].percent = value;\n\t}\n\n\t@action.bound\n\tchangeSkillColor(value: string, index: number) {\n\t\tthis.userDetail.personalSkill[index].color = value;\n\t}\n\n\t@action.bound\n\tfilterSkill() {\n\t\tthis.userDetail.personalSkill = this.userDetail.personalSkill.filter(item =>\n\t\t\titem.name.trim(),\n\t\t);\n\t}\n\n\t@action.bound\n\taddSkill() {\n\t\tthis.userDetail.personalSkill.push({\n\t\t\tname: '',\n\t\t\tpercent: SKILL_PERCENT_MID,\n\t\t\tcolor: SKILL_COLOR,\n\t\t});\n\t}\n\n\t@computed\n\tget isLogin() {\n\t\treturn this.session !== '';\n\t}\n\n\t@computed\n\tget userId() {\n\t\treturn this.userDetail.objectId || 'objectId';\n\t}\n}\n","import { action, computed, observable } from 'mobx';\n\nimport { TagListType } from '@/types/tag';\n\nexport default class TagStore {\n\t@observable\n\ttags: TagListType = [];\n\n\t@action.bound\n\tgetTags() {\n\t\tthis.setTags([]);\n\t}\n\n\t@action.bound\n\tsetTags(tags: TagListType) {\n\t\tthis.tags = tags;\n\t}\n\n\t@action.bound\n\taddTag() {\n\t\tthis.tags.push({\n\t\t\tname: '',\n\t\t\tshow: true,\n\t\t\tcount: 0,\n\t\t});\n\t}\n\n\t@action.bound\n\tremoveTag(index: number) {\n\t\tthis.tags.splice(index, 1);\n\t}\n\n\t@action.bound\n\tchangeTagName({ name, index }: { name: string; index: number }) {\n\t\tthis.tags[index].name = name;\n\t}\n\n\t@action.bound\n\tchangeTagShow(index: number) {\n\t\tconst { show } = this.tags[index];\n\t\tthis.tags[index].show = !show;\n\t}\n\n\t@action.bound\n\tfilterEmptyTag() {\n\t\tthis.tags = this.tags.filter(tag => tag.name);\n\t}\n\n\t@computed\n\tget hasTag() {\n\t\treturn this.tagLength > 0;\n\t}\n\n\t@computed\n\tget tagLength() {\n\t\treturn this.tags.length;\n\t}\n\n\t@computed\n\tget hasSameNameTag() {\n\t\tfor (let i = 0; i < this.tagLength; i++) {\n\t\t\tconst currentTag = this.tags[i];\n\t\t\tfor (let j = i + 1; j < this.tagLength; j++) {\n\t\t\t\tconst _compareTag = this.tags[j];\n\t\t\t\tif (currentTag.name === _compareTag.name) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n","import { action, computed, observable } from 'mobx';\n\nimport { PAGE_LIMIT } from '@/utils/constant';\n\nexport default class ListStore<T extends { objectId: string }> {\n\t@observable\n\tlist: Array<T> = [];\n\n\t@observable\n\tpageSize = PAGE_LIMIT;\n\n\t@observable\n\tpageIndex = 1;\n\n\t@observable\n\tcount = 0;\n\n\t@observable\n\tloading = false;\n\n\t@observable\n\terror = false;\n\n\t@observable\n\terrMsg = '';\n\n\t@action.bound\n\tprePage() {\n\t\tif (this.pageIndex > 1) {\n\t\t\tthis.pageIndex--;\n\t\t}\n\t}\n\n\t@action.bound\n\tnextPage() {\n\t\tif (this.hasNext) {\n\t\t\tthis.pageIndex++;\n\t\t}\n\t}\n\n\t@action.bound\n\tjumpToPage(page: number) {\n\t\tthis.pageIndex = page;\n\t}\n\n\t@action.bound\n\tchangeLoading() {\n\t\tthis.loading = !this.loading;\n\t}\n\n\t@action.bound\n\tchangePageSize(pageSize: number) {\n\t\tthis.pageSize = pageSize;\n\t}\n\n\t@action.bound\n\tsetList({ results, count }: { results: Array<T>; count: number }) {\n\t\tthis.list = results;\n\t\tthis.count = count;\n\t}\n\n\t@action.bound\n\tremoveItem(item: T) {\n\t\tthis.list = this.list.filter(value => value.objectId !== item.objectId);\n\t}\n\n\t@action.bound\n\tsetItem(item: T) {\n\t\tthis.list = this.list.map(_ => {\n\t\t\tif (_.objectId === item.objectId) {\n\t\t\t\treturn item;\n\t\t\t}\n\t\t\treturn _;\n\t\t});\n\t}\n\n\t@action.bound\n\taddList(list: Array<T>) {\n\t\tthis.list = this.list.concat(list);\n\t}\n\n\t@action.bound\n\tresetStore() {\n\t\tthis.list = [];\n\t\tthis.pageIndex = 1;\n\t\tthis.count = 0;\n\t\tthis.loading = false;\n\t\tthis.error = false;\n\t\tthis.errMsg = '';\n\t\tthis.pageSize = PAGE_LIMIT;\n\t}\n\n\t@computed\n\tget currentCount() {\n\t\treturn this.pageSize * this.pageIndex;\n\t}\n\n\t@computed\n\tget hasNext() {\n\t\treturn this.count > this.currentCount;\n\t}\n\n\t@computed\n\tget listLength() {\n\t\treturn this.list.length;\n\t}\n\n\t@computed\n\tget isEmpty() {\n\t\treturn this.listLength === 0;\n\t}\n}\n","import { action, computed, observable } from 'mobx';\n\nimport ListStore from '@/store/ListStore';\n\nimport { ArticleQueryType, ArticleItemType } from '@/types/article';\n\nimport { EArticleStatus } from '@/store/ArticleDetailStore/article.enum';\n\nexport default class ArticleListStore extends ListStore<ArticleItemType> {\n\t@observable\n\tquery: ArticleQueryType = {\n\t\tkeyword: undefined,\n\t\tstartTime: undefined,\n\t\tendTime: undefined,\n\t\tstatus: EArticleStatus.show,\n\t\ttags: undefined,\n\t};\n\n\t@action.bound\n\tgetList() {\n\t\t// results.forEach(item => (item.key = item.objectId));\n\t\tthis.setList({\n\t\t\tresults: [],\n\t\t\tcount: 0,\n\t\t});\n\t}\n\n\t@action.bound\n\tsetQuery(query: ArticleQueryType) {\n\t\tthis.query = query;\n\t}\n\n\t@action.bound\n\tchangeStatus(articleIds: Array<string>, status: number) {\n\t\tthis.list = this.list.map(item => {\n\t\t\tconst { objectId } = item;\n\t\t\tif (articleIds.includes(objectId)) {\n\t\t\t\titem.status = status;\n\t\t\t}\n\t\t\treturn item;\n\t\t});\n\t}\n\n\t@action.bound\n\tdeleteArticle(articleIds: Array<string>) {\n\t\tthis.list = this.list.filter(item => !articleIds.includes(item.objectId));\n\t}\n\n\t@computed\n\tget searchQuery() {\n\t\treturn JSON.stringify({\n\t\t\t...this.query,\n\t\t\t...{ pageIndex: this.pageIndex, pageSize: this.pageSize },\n\t\t});\n\t}\n}\n","import { action, observable } from 'mobx';\n\nimport BraftEditor from 'braft-editor';\n\nimport { ArticleDetailType } from '@/types/article';\n\nimport {\n\tEArticleDetailKey,\n\tEArticleEditError,\n\tEArticleRenderType,\n} from './article.enum';\n\nexport default class ArticleDetailStore {\n\t@observable\n\terror = {\n\t\ttitleError: false,\n\t\tintroError: false,\n\t\ttagError: false,\n\t\tcontentError: false,\n\t};\n\n\t@observable\n\tdetail: ArticleDetailType | null = null;\n\n\temptyDetail: ArticleDetailType = {\n\t\ttitle: '',\n\t\tintro: '',\n\t\trichTextHtml: '',\n\t\trichTextRaw: '',\n\t\tmarkdown: '',\n\t\tstatus: 1,\n\t\ttags: [],\n\t\tdraftDetail: BraftEditor.createEditorState(null),\n\t\trenderType: EArticleRenderType.richText,\n\t};\n\n\t@action.bound\n\tsetDetail(detail: Partial<ArticleDetailType> | null) {\n\t\tthis.createArticle();\n\t\tif (detail) {\n\t\t\tif (detail.renderType === EArticleRenderType.richText) {\n\t\t\t\tdetail.draftDetail = BraftEditor.createEditorState(detail.richTextRaw);\n\t\t\t}\n\t\t\t(this.detail as any) = { ...this.detail, ...detail };\n\t\t}\n\t}\n\n\t@action.bound\n\tcreateArticle() {\n\t\tif (!this.detail) {\n\t\t\tthis.detail = this.emptyDetail;\n\t\t}\n\t}\n\n\t@action.bound\n\tchangeDetail({ key, value }: { key: EArticleDetailKey; value: any }) {\n\t\tif (this.detail) {\n\t\t\t(this.detail[key] as any) = value;\n\t\t}\n\t}\n\n\t@action.bound\n\tvalidError({ key, value }: { key: EArticleEditError; value: boolean }) {\n\t\tthis.error[key] = value;\n\t}\n\n\t@action.bound\n\tresetError() {\n\t\tthis.error = {\n\t\t\ttitleError: false,\n\t\t\tintroError: false,\n\t\t\ttagError: false,\n\t\t\tcontentError: false,\n\t\t};\n\t}\n}\n","import { action, observable } from 'mobx';\n\nimport ListStore from '@/store/ListStore';\nimport ImageStore from '@/store/ImageStore';\n\nimport { CatItemType } from '@/types/cat';\n\n// import array from './data';\n\nexport default class CatStore extends ListStore<CatItemType> {\n\t@observable\n\tcatFigure = new ImageStore();\n\n\t@action.bound\n\tgetList() {\n\t\t// this.setList({\n\t\t// \tresults: array,\n\t\t// \tcount: array.length,\n\t\t// });\n\t}\n\n\t@action.bound\n\tsetCatFigure() {\n\t\tthis.catFigure.setImageList([]);\n\t}\n}\n","import { action } from 'mobx';\n\nimport ListStore from '@/store/ListStore';\n\nimport { AlbumItemType } from '@/types/album';\n\n// import { data } from './data';\n\nexport default class PhotoAlbumStore extends ListStore<AlbumItemType> {\n\t@action.bound\n\tgetList() {\n\t\t// this.setList({ results: data, count: data.length });\n\t\tthis.setList({ results: [], count: 0 });\n\t}\n}\n","import { action, computed, observable } from 'mobx';\n\nimport ListStore from '@/store/ListStore';\n\nimport { PhotoItemType, PhotoListType } from '@/types/photo';\n\n// import array from './data';\n\nexport default class PhotoListStore extends ListStore<PhotoItemType> {\n\t@observable\n\tcolumn = 1;\n\n\t@action.bound\n\tsetColumn(column: number) {\n\t\tif (this.column !== column) {\n\t\t\tthis.column = column;\n\t\t}\n\t}\n\n\t@action.bound\n\tgetList() {\n\t\t// this.setList({ results: array, count: array.length });\n\t}\n\n\t@action.bound\n\tsetList({ results, count }: { results: PhotoListType; count: number }) {\n\t\tthis.list = this.list.concat(results);\n\t\tthis.count = count;\n\t}\n\n\t@computed\n\tget spliceList() {\n\t\tconst { list, column } = this;\n\t\tconst spliceList: Array<PhotoListType> = new Array<PhotoListType>(column);\n\n\t\tlist.forEach((item, index) => {\n\t\t\tif (!spliceList[index % column]) {\n\t\t\t\tspliceList[index % column] = [];\n\t\t\t}\n\t\t\tspliceList[index % column].push(item);\n\t\t});\n\n\t\treturn spliceList;\n\t}\n\n\t@computed\n\tget imageUrls() {\n\t\treturn this.list.map(item => item.url).filter(value => value);\n\t}\n}\n","import GlobalStore from '@/store/GlobalStore';\n\nimport HomePageStore from './HomePageStore';\nimport UserStore from '@/store/UserStore';\nimport TagStore from '@/store/TagStore';\nimport ArticleListStore from '@/store/ArticleListStore';\nimport ArticleDetailStore from '@/store/ArticleDetailStore';\nimport CatStore from '@/store/CatStore';\nimport PhotoAlbumStore from '@/store/PhotoAlbumStore';\nimport PhotoListStore from '@/store/PhotoListStore';\n\nimport { StoreType } from './store';\n\nconst store: StoreType = {\n\tglobalStore: new GlobalStore(),\n\thomepageStore: new HomePageStore(),\n\tuserStore: new UserStore(),\n\ttagStore: new TagStore(),\n\tarticleListStore: new ArticleListStore(),\n\tarticleDetailStore: new ArticleDetailStore(),\n\tcatStore: new CatStore(),\n\tphotoAlbumStore: new PhotoAlbumStore(),\n\tphotoListStore: new PhotoListStore(),\n};\n\nexport default store;\n"],"sourceRoot":""}